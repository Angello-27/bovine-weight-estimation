// Mocks generated by Mockito 5.4.6 from annotations
// in bovine_weight_mobile/test/domain/usecases/capture_frames_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:bovine_weight_mobile/core/errors/failures.dart' as _i5;
import 'package:bovine_weight_mobile/domain/entities/capture_session.dart'
    as _i6;
import 'package:bovine_weight_mobile/domain/entities/frame.dart' as _i7;
import 'package:bovine_weight_mobile/domain/repositories/frame_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FrameRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFrameRepository extends _i1.Mock implements _i3.FrameRepository {
  MockFrameRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CaptureSession>> startCaptureSession({
    int? targetFps = 12,
    int? durationSeconds = 4,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#startCaptureSession, [], {
              #targetFps: targetFps,
              #durationSeconds: durationSeconds,
            }),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.CaptureSession>>.value(
                  _FakeEither_0<_i5.Failure, _i6.CaptureSession>(
                    this,
                    Invocation.method(#startCaptureSession, [], {
                      #targetFps: targetFps,
                      #durationSeconds: durationSeconds,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.CaptureSession>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.Frame>> captureFrame(
    String? sessionId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#captureFrame, [sessionId]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.Frame>>.value(
              _FakeEither_0<_i5.Failure, _i7.Frame>(
                this,
                Invocation.method(#captureFrame, [sessionId]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i7.Frame>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.FrameQuality>> evaluateFrameQuality(
    String? imagePath,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#evaluateFrameQuality, [imagePath]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i7.FrameQuality>>.value(
                  _FakeEither_0<_i5.Failure, _i7.FrameQuality>(
                    this,
                    Invocation.method(#evaluateFrameQuality, [imagePath]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i7.FrameQuality>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CaptureSession>> endCaptureSession(
    String? sessionId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#endCaptureSession, [sessionId]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.CaptureSession>>.value(
                  _FakeEither_0<_i5.Failure, _i6.CaptureSession>(
                    this,
                    Invocation.method(#endCaptureSession, [sessionId]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.CaptureSession>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> cancelCaptureSession(
    String? sessionId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#cancelCaptureSession, [sessionId]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#cancelCaptureSession, [sessionId]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CaptureSession?>>
  getCurrentSession() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentSession, []),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.CaptureSession?>>.value(
                  _FakeEither_0<_i5.Failure, _i6.CaptureSession?>(
                    this,
                    Invocation.method(#getCurrentSession, []),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.CaptureSession?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> saveCaptureSession(
    _i6.CaptureSession? session,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveCaptureSession, [session]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#saveCaptureSession, [session]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.CaptureSession>>>
  getSavedSessions() =>
      (super.noSuchMethod(
            Invocation.method(#getSavedSessions, []),
            returnValue:
                _i4.Future<
                  _i2.Either<_i5.Failure, List<_i6.CaptureSession>>
                >.value(
                  _FakeEither_0<_i5.Failure, List<_i6.CaptureSession>>(
                    this,
                    Invocation.method(#getSavedSessions, []),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.CaptureSession>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteCaptureSession(
    String? sessionId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCaptureSession, [sessionId]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#deleteCaptureSession, [sessionId]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
